"""
Django settings for appconfig project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

import urllib.parse as urlparse

import django_heroku
from dotenv import load_dotenv

load_dotenv()

DEBUG=False

import django_heroku
import dj_database_url
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

<<<<<<< HEAD
FRONTEND_DIR = os.path.join(BASE_DIR.parent, 'frontend')

=======
>>>>>>> heroku/main
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'changeme_123')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DEBUG_DJANGO', False))

ADMIN_ENABLED = False

ALLOWED_HOSTS = [os.environ.get('ALLOWED_HOSTS', '127.0.0.1'),]

# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # ----------------------
    'corsheaders',
    'rest_framework',
    # ----------------------
    'error',
    'modulo',
    'aula',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'appconfig.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
<<<<<<< HEAD
        'DIRS': [os.path.join(FRONTEND_DIR, 'dist')],
=======
        'DIRS': [os.path.join(BASE_DIR, "staticfiles")],
>>>>>>> heroku/main
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'appconfig.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

<<<<<<< HEAD
DATABASE_URL_PARSE = urlparse.urlparse(os.getenv('DATABASE_URL'))

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DATABASE_URL_PARSE.path[1:],
        'USER': DATABASE_URL_PARSE.username,
        'PASSWORD': DATABASE_URL_PARSE.password,
        'HOST': DATABASE_URL_PARSE.hostname,
        'PORT': DATABASE_URL_PARSE.port,
        'OPTIONS': {
            'sslmode': None,
        }
    }
}

=======
DATABASES = {}
DATABASES['default'] = dj_database_url.config(conn_max_age=600)
>>>>>>> heroku/main

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

STATICFILES_DIRS = [
<<<<<<< HEAD
    os.path.join(FRONTEND_DIR, 'dist'),
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"
=======
  # Tell Django where to look for React's static files (css, js)
  os.path.join(BASE_DIR, "staticfiles/assets"),
]

>>>>>>> heroku/main

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES' :[
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

<<<<<<< HEAD
CORS_ALLOW_ALL_ORIGINS = True
django_heroku.settings(locals())
=======
CORS_ORIGIN_WHITELIST = [
    os.environ.get('CORS_ORIGIN_WHITELIST', 'http://localhost:3000'),
]

django_heroku.settings(locals())
options = DATABASES['default'].get('OPTIONS', {})
options.pop('sslmode', None)
>>>>>>> heroku/main
